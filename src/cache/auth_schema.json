{
  "filename": "auth.schema",
  "source": "core/security/models/auth.schema",
  "date": "2018-01-01 08:47:35 +0800",
  "checksum": "19fafa3300b582cc96e8a76e7fec439f44bd6b4e",
  "depends": [
    {
      "filename": "schema.grammar",
      "source": "core/schema/models/schema.grammar",
      "date": "2019-07-18 16:09:47 +0800",
      "checksum": "31fb8534f09c4380852aa26d02d79bed484c0d11"
    },
    {
      "filename": "schema.schema",
      "source": "core/schema/models/schema.schema",
      "date": "2018-01-01 08:47:35 +0800",
      "checksum": "36a20ad876a14f149ede32638ec0cc9f1b549159"
    },
    {
      "filename": "expr.schema",
      "source": "core/expr/models/expr.schema",
      "date": "2018-01-01 08:47:35 +0800",
      "checksum": "a3a51f71beb086df1b4975062791c9c6e18be9c9"
    }
  ],
  "model": {
    "class": "Schema",
    "types#": [
      {
        "class": "Primitive",
        "name=": "int",
        "schema": ""
      },
      {
        "class": "Primitive",
        "name=": "str",
        "schema": ""
      },
      {
        "class": "Primitive",
        "name=": "bool",
        "schema": ""
      },
      {
        "class": "Class",
        "name=": "Authorization",
        "schema": "",
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "rules",
            "owner": "types[Authorization]",
            "type": "types[Rule]",
            "optional=": true,
            "many=": true,
            "traversal=": true
          },
          {
            "class": "Field",
            "name=": "allowrules",
            "owner": "types[Authorization]",
            "type": "types[Rule]",
            "optional=": true,
            "many=": true,
            "computed": {
              "class": "EFunCall",
              "fun": {
                "class": "EField",
                "e": {
                  "class": "EVar",
                  "name=": "rules"
                },
                "fname=": "select"
              },
              "lambda": {
                "class": "ELambda",
                "body": {
                  "class": "EBinOp",
                  "op=": "eql?",
                  "e1": {
                    "class": "EField",
                    "e": {
                      "class": "EField",
                      "e": {
                        "class": "EVar",
                        "name=": "r"
                      },
                      "fname=": "schema_class"
                    },
                    "fname=": "name"
                  },
                  "e2": {
                    "class": "EStrConst",
                    "val=": "AllowRule"
                  }
                },
                "formals": [
                  {
                    "class": "Formal",
                    "name=": "r"
                  }
                ]
              }
            }
          },
          {
            "class": "Field",
            "name=": "denyrules",
            "owner": "types[Authorization]",
            "type": "types[Rule]",
            "optional=": true,
            "many=": true,
            "computed": {
              "class": "EFunCall",
              "fun": {
                "class": "EField",
                "e": {
                  "class": "EVar",
                  "name=": "rules"
                },
                "fname=": "select"
              },
              "lambda": {
                "class": "ELambda",
                "body": {
                  "class": "EBinOp",
                  "op=": "eql?",
                  "e1": {
                    "class": "EField",
                    "e": {
                      "class": "EField",
                      "e": {
                        "class": "EVar",
                        "name=": "r"
                      },
                      "fname=": "schema_class"
                    },
                    "fname=": "name"
                  },
                  "e2": {
                    "class": "EStrConst",
                    "val=": "DenyRule"
                  }
                },
                "formals": [
                  {
                    "class": "Formal",
                    "name=": "r"
                  }
                ]
              }
            }
          }
        ]
      },
      {
        "class": "Class",
        "name=": "Rule",
        "schema": "",
        "subclasses#": [
          "types[AllowRule]",
          "types[DenyRule]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "strength",
            "owner": "types[Rule]",
            "type": "types[int]"
          },
          {
            "class": "Field",
            "name=": "action",
            "owner": "types[Rule]",
            "type": "types[Action]",
            "traversal=": true
          },
          {
            "class": "Field",
            "name=": "cond",
            "owner": "types[Rule]",
            "type": "types[Expr]",
            "optional=": true,
            "traversal=": true
          }
        ]
      },
      {
        "class": "Class",
        "name=": "AllowRule",
        "schema": "",
        "supers#": [
          "types[Rule]"
        ]
      },
      {
        "class": "Class",
        "name=": "DenyRule",
        "schema": "",
        "supers#": [
          "types[Rule]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "msg",
            "owner": "types[DenyRule]",
            "type": "types[str]",
            "optional=": true
          }
        ]
      },
      {
        "class": "Class",
        "name=": "Action",
        "schema": "",
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "op",
            "owner": "types[Action]",
            "type": "types[Operation]",
            "many=": true,
            "traversal=": true
          },
          {
            "class": "Field",
            "name=": "obj",
            "owner": "types[Action]",
            "type": "types[str]"
          },
          {
            "class": "Field",
            "name=": "type",
            "owner": "types[Action]",
            "type": "types[str]"
          },
          {
            "class": "Field",
            "name=": "fields",
            "owner": "types[Action]",
            "type": "types[Field]",
            "optional=": true,
            "many=": true,
            "traversal=": true
          },
          {
            "class": "Field",
            "name=": "allfields",
            "owner": "types[Action]",
            "type": "types[bool]"
          }
        ]
      },
      {
        "class": "Class",
        "name=": "Field",
        "schema": "",
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "name",
            "owner": "types[Field]",
            "type": "types[str]"
          }
        ]
      },
      {
        "class": "Class",
        "name=": "Operation",
        "schema": "",
        "subclasses#": [
          "types[OpCreate]",
          "types[OpRead]",
          "types[OpUpdate]",
          "types[OpDelete]"
        ]
      },
      {
        "class": "Class",
        "name=": "OpCreate",
        "schema": "",
        "supers#": [
          "types[Operation]"
        ]
      },
      {
        "class": "Class",
        "name=": "OpRead",
        "schema": "",
        "supers#": [
          "types[Operation]"
        ]
      },
      {
        "class": "Class",
        "name=": "OpUpdate",
        "schema": "",
        "supers#": [
          "types[Operation]"
        ]
      },
      {
        "class": "Class",
        "name=": "OpDelete",
        "schema": "",
        "supers#": [
          "types[Operation]"
        ]
      },
      {
        "class": "Class",
        "name=": "Expr",
        "schema": "",
        "subclasses#": [
          "types[ETernOp]",
          "types[EBinOp]",
          "types[EUnOp]",
          "types[InstanceOf]",
          "types[EFunCall]",
          "types[EField]",
          "types[EVar]",
          "types[ESubscript]",
          "types[EList]",
          "types[EAddress]",
          "types[ENew]",
          "types[EConst]"
        ]
      },
      {
        "class": "Class",
        "name=": "ETernOp",
        "schema": "",
        "supers#": [
          "types[Expr]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "op1",
            "owner": "types[ETernOp]",
            "type": "types[str]"
          },
          {
            "class": "Field",
            "name=": "op2",
            "owner": "types[ETernOp]",
            "type": "types[str]"
          },
          {
            "class": "Field",
            "name=": "e1",
            "owner": "types[ETernOp]",
            "type": "types[Expr]",
            "traversal=": true
          },
          {
            "class": "Field",
            "name=": "e2",
            "owner": "types[ETernOp]",
            "type": "types[Expr]",
            "traversal=": true
          },
          {
            "class": "Field",
            "name=": "e3",
            "owner": "types[ETernOp]",
            "type": "types[Expr]",
            "traversal=": true
          }
        ]
      },
      {
        "class": "Class",
        "name=": "EBinOp",
        "schema": "",
        "supers#": [
          "types[Expr]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "op",
            "owner": "types[EBinOp]",
            "type": "types[str]"
          },
          {
            "class": "Field",
            "name=": "e1",
            "owner": "types[EBinOp]",
            "type": "types[Expr]",
            "traversal=": true
          },
          {
            "class": "Field",
            "name=": "e2",
            "owner": "types[EBinOp]",
            "type": "types[Expr]",
            "traversal=": true
          }
        ]
      },
      {
        "class": "Class",
        "name=": "EUnOp",
        "schema": "",
        "supers#": [
          "types[Expr]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "op",
            "owner": "types[EUnOp]",
            "type": "types[str]"
          },
          {
            "class": "Field",
            "name=": "e",
            "owner": "types[EUnOp]",
            "type": "types[Expr]",
            "traversal=": true
          }
        ]
      },
      {
        "class": "Class",
        "name=": "InstanceOf",
        "schema": "",
        "supers#": [
          "types[Expr]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "base",
            "owner": "types[InstanceOf]",
            "type": "types[Expr]",
            "traversal=": true
          },
          {
            "class": "Field",
            "name=": "class_name",
            "owner": "types[InstanceOf]",
            "type": "types[str]"
          }
        ]
      },
      {
        "class": "Class",
        "name=": "EFunCall",
        "schema": "",
        "supers#": [
          "types[Expr]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "fun",
            "owner": "types[EFunCall]",
            "type": "types[Expr]",
            "traversal=": true
          },
          {
            "class": "Field",
            "name=": "params",
            "owner": "types[EFunCall]",
            "type": "types[Expr]",
            "optional=": true,
            "many=": true,
            "traversal=": true
          },
          {
            "class": "Field",
            "name=": "lambda",
            "owner": "types[EFunCall]",
            "type": "types[ELambda]",
            "optional=": true,
            "traversal=": true
          }
        ]
      },
      {
        "class": "Class",
        "name=": "ELambda",
        "schema": "",
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "body",
            "owner": "types[ELambda]",
            "type": "types[Expr]",
            "traversal=": true
          },
          {
            "class": "Field",
            "name=": "formals",
            "owner": "types[ELambda]",
            "type": "types[Formal]",
            "optional=": true,
            "many=": true,
            "traversal=": true
          }
        ]
      },
      {
        "class": "Class",
        "name=": "Formal",
        "schema": "",
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "name",
            "owner": "types[Formal]",
            "type": "types[str]"
          }
        ]
      },
      {
        "class": "Class",
        "name=": "EField",
        "schema": "",
        "supers#": [
          "types[Expr]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "e",
            "owner": "types[EField]",
            "type": "types[Expr]",
            "traversal=": true
          },
          {
            "class": "Field",
            "name=": "fname",
            "owner": "types[EField]",
            "type": "types[str]"
          }
        ]
      },
      {
        "class": "Class",
        "name=": "EVar",
        "schema": "",
        "supers#": [
          "types[Expr]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "name",
            "owner": "types[EVar]",
            "type": "types[str]"
          }
        ]
      },
      {
        "class": "Class",
        "name=": "ESubscript",
        "schema": "",
        "supers#": [
          "types[Expr]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "e",
            "owner": "types[ESubscript]",
            "type": "types[Expr]",
            "traversal=": true
          },
          {
            "class": "Field",
            "name=": "sub",
            "owner": "types[ESubscript]",
            "type": "types[Expr]",
            "traversal=": true
          }
        ]
      },
      {
        "class": "Class",
        "name=": "EList",
        "schema": "",
        "supers#": [
          "types[Expr]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "elems",
            "owner": "types[EList]",
            "type": "types[Expr]",
            "optional=": true,
            "many=": true,
            "traversal=": true
          }
        ]
      },
      {
        "class": "Class",
        "name=": "EAddress",
        "schema": "",
        "supers#": [
          "types[Expr]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "e",
            "owner": "types[EAddress]",
            "type": "types[Expr]",
            "traversal=": true
          }
        ]
      },
      {
        "class": "Class",
        "name=": "ENew",
        "schema": "",
        "supers#": [
          "types[Expr]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "class",
            "owner": "types[ENew]",
            "type": "types[str]"
          }
        ]
      },
      {
        "class": "Class",
        "name=": "EConst",
        "schema": "",
        "supers#": [
          "types[Expr]"
        ],
        "subclasses#": [
          "types[EStrConst]",
          "types[EIntConst]",
          "types[EBoolConst]",
          "types[ERealConst]",
          "types[ENil]"
        ]
      },
      {
        "class": "Class",
        "name=": "EStrConst",
        "schema": "",
        "supers#": [
          "types[EConst]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "val",
            "owner": "types[EStrConst]",
            "type": "types[str]"
          },
          {
            "class": "Field",
            "name=": "type",
            "owner": "types[EStrConst]",
            "type": "types[str]",
            "computed": {
              "class": "EStrConst",
              "val=": "str"
            }
          }
        ]
      },
      {
        "class": "Class",
        "name=": "EIntConst",
        "schema": "",
        "supers#": [
          "types[EConst]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "val",
            "owner": "types[EIntConst]",
            "type": "types[int]"
          },
          {
            "class": "Field",
            "name=": "type",
            "owner": "types[EIntConst]",
            "type": "types[str]",
            "computed": {
              "class": "EStrConst",
              "val=": "int"
            }
          }
        ]
      },
      {
        "class": "Class",
        "name=": "EBoolConst",
        "schema": "",
        "supers#": [
          "types[EConst]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "val",
            "owner": "types[EBoolConst]",
            "type": "types[bool]"
          },
          {
            "class": "Field",
            "name=": "type",
            "owner": "types[EBoolConst]",
            "type": "types[str]",
            "computed": {
              "class": "EStrConst",
              "val=": "bool"
            }
          }
        ]
      },
      {
        "class": "Class",
        "name=": "ERealConst",
        "schema": "",
        "supers#": [
          "types[EConst]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "val",
            "owner": "types[ERealConst]",
            "type": "types[real]"
          },
          {
            "class": "Field",
            "name=": "type",
            "owner": "types[ERealConst]",
            "type": "types[str]",
            "computed": {
              "class": "EStrConst",
              "val=": "real"
            }
          }
        ]
      },
      {
        "class": "Class",
        "name=": "ENil",
        "schema": "",
        "supers#": [
          "types[EConst]"
        ]
      },
      {
        "class": "Primitive",
        "name=": "real",
        "schema": ""
      }
    ]
  }
}