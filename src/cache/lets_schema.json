{
  "filename": "lets.schema",
  "source": "core/grammar/test/lets.schema",
  "date": "2018-01-01 08:47:35 +0800",
  "checksum": "ee4c5defe8ff3d9e53cbef1c7aa8e65be8551ca5",
  "depends": [
    {
      "filename": "schema.grammar",
      "source": "core/schema/models/schema.grammar",
      "date": "2019-07-18 16:09:47 +0800",
      "checksum": "31fb8534f09c4380852aa26d02d79bed484c0d11"
    },
    {
      "filename": "schema.schema",
      "source": "core/schema/models/schema.schema",
      "date": "2018-01-01 08:47:35 +0800",
      "checksum": "36a20ad876a14f149ede32638ec0cc9f1b549159"
    }
  ],
  "model": {
    "class": "Schema",
    "types#": [
      {
        "class": "Class",
        "name=": "Exp",
        "schema": "",
        "subclasses#": [
          "types[Let]",
          "types[Var]",
          "types[Val]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "parent",
            "owner": "types[Exp]",
            "type": "types[Exp]",
            "optional=": true
          },
          {
            "class": "Field",
            "name=": "scope",
            "owner": "types[Exp]",
            "type": "types[Exp]",
            "computed": {
              "class": "EStrConst",
              "val=": "@let || @parent.let"
            }
          },
          {
            "class": "Field",
            "name=": "let",
            "owner": "types[Exp]",
            "type": "types[Let]",
            "inverse": "types[Let].defined_fields[body]"
          }
        ]
      },
      {
        "class": "Class",
        "name=": "Let",
        "schema": "",
        "supers#": [
          "types[Exp]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "bindings",
            "owner": "types[Let]",
            "type": "types[Binding]",
            "optional=": true,
            "many=": true,
            "traversal=": true
          },
          {
            "class": "Field",
            "name=": "body",
            "owner": "types[Let]",
            "type": "types[Exp]",
            "inverse": "types[Exp].defined_fields[let]",
            "traversal=": true
          }
        ]
      },
      {
        "class": "Class",
        "name=": "Var",
        "schema": "",
        "supers#": [
          "types[Exp]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "decl",
            "owner": "types[Var]",
            "type": "types[Binding]"
          }
        ]
      },
      {
        "class": "Class",
        "name=": "Val",
        "schema": "",
        "supers#": [
          "types[Exp]"
        ],
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "value",
            "owner": "types[Val]",
            "type": "types[int]"
          }
        ]
      },
      {
        "class": "Class",
        "name=": "Binding",
        "schema": "",
        "defined_fields#": [
          {
            "class": "Field",
            "name=": "name",
            "owner": "types[Binding]",
            "type": "types[str]",
            "key=": true
          },
          {
            "class": "Field",
            "name=": "exp",
            "owner": "types[Binding]",
            "type": "types[Exp]",
            "traversal=": true
          }
        ]
      },
      {
        "class": "Primitive",
        "name=": "str",
        "schema": ""
      },
      {
        "class": "Primitive",
        "name=": "int",
        "schema": ""
      }
    ]
  }
}