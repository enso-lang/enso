// what are the position/size operators
// x/y: fixed | computed
// height/width: 
    // fixed: "300"
    // variable: "x"
    
// every part has a container and an actual location
//      minComputedWidth < wCONSTRAINT < actual.w
//      minSpecWidth < wCONSTRAINT < actual.w

class Part 
  constraints: SizeConstraints?
  styles! Style*

class Container < Part
  direction: int
  items! Part*

class Text < Part
  string: str
  editable: bool

class Shape < Part
  content! Part?
  kind: str
  location: Point?  // only used for graph shapes
  connectors: ConnectorEnd* 

class Connector < Part
  label: Text?
  ends! ConnectorEnd*
  path: Point*

class ConnectorEnd
  arrow: str?
  label! Text?
  other_label! Text?
  to: Shape / connectors
  attach: EdgePos
  minOut: int
  minLeft: int
  minRight: int
  owner: Connector / ends

class EdgePos
  // x==1 or x==0 or y==1 or y==0
  x: real
  y: real

// styles
class Style 

class Pen < Style
  width: int?
  style: str?
  color! Color?

class Brush < Style
  color! Color

// "font-style font-variant font-weight font-size/line-height font-family"
class Font < Style
  style: str?    // italic | oblique
  variant: str?  // smallcaps
  weight: str?  // bold | light
  size: int
  family: str?   // font name or generic family (like "serif", "sans-serif", "cursive", "fantasy", "monospace")

class Baseline < Style
	baseline: str
	
class Alignment < Style
  align: str  // "center"| "left" | "right"
  
class Dashes < Style
  dashes! Dash*
  
class Dash
  length: int
	
class Color
  r: int
  g: int
  b: int

// basics
  
class Point
  x: int
  y: int

class Rect < Point
  w: int
  h: int

class SizeConstraints
  width: Constraint
  height: Constraint

class Constraint
  min: int?
  var: str?

primitive real
primitive int
primitive str
primitive bool
