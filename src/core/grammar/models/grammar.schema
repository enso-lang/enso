
import expr.schema

primitive str 
primitive int 
primitive bool 

class Grammar 
  start: Rule 
  rules! Rule* 

class Pattern


class Rule
  name# str 
  grammar: Grammar / rules 
  arg! Pattern?   // optional because of abstract rules
 
class Alt < Pattern 
  alts! Pattern+ 

class Sequence < Pattern 
  elements! Pattern* 
 
class Create < Pattern 
  name: str 
  arg! Pattern
 
class Field < Pattern 
  name: str 
  arg! Pattern 
 
class Terminal < Pattern

class Value < Terminal
  kind: str 
 
class Ref < Terminal
   path! Expr

class Lit < Terminal
  value: str

class Call < Pattern 
  rule: Rule 
 
class Regular < Pattern 
  arg! Pattern 
  optional: bool 
  many: bool 
  sep! Pattern ? 

class NoSpace < Pattern

class Break < Pattern
  lines: int

class Indent < Pattern
  indent: int
 
class Hide < Pattern
  arg! Pattern
 
class Code < Terminal
  expr! Expr
 
class Expr