import expr.grammar

start Questionaire

Questionaire ::= [Questionaire] ("title" title:str)? /2 elems:Elem*@/ /2 "answers" /2 answers:AnswerType*@/2

Elem ::= Group | Question

Group ::= [Group] ("if" guard:Expr)? "{" / elems:Elem*@/ / "}"

Question ::= [Question] name:sym ":" qn:str ans:<root.answers[it]> { response == self.factory.EIntConst }

AnswerType ::= CheckBox
             | MultiChoice
             | TextBox
             | Computed

CheckBox ::= [CheckBox] name:sym ":" Type "[" choices:Label+ "]"
MultiChoice ::= [MultiChoice] name:sym ":" Type "(" choices:Label+ ")"
TextBox ::= [TextBox] name:sym ":" Type
Computed ::= [Computed] name:sym ":" Type "=" expr:Expr

Type ::= type:"int"
       | type:"bool"
       | type:"str"
       | type:"real"

Label ::= [Label] string:str