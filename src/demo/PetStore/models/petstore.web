
def index() {
  layout() {
    pet_map();
  }
}


def group(lines: line(label, yield[])) {
  <table>
  for (l: lines) {
    <tr>
    <td>
    <label>$l->label</label>
    </td>
    <td>
    l->yield();
    </td>
    </tr>
  }
  </table>    
}

def textarea(rows, cols, data) {
  let
    key = address(data)
  in {
    if (errors[key]) {
      <span style="color: red;">$errors[key]</span>
    }
    <textarea name=key rows=rows cols=cols>$data</textarea>
  }
}

def fileupload(data) {
  let
    key = address(data)
  in {
    <input type="hidden" name=key value=""/>
    <input type="file" name="upload" chars="30"/>
  }
}

def edit_item(item) {
  layout {
    form {
      add_to(item, root->items);
      group {
        line("Category") {
          select1(item->product, root->products);
        }
  	line("*Pet's name") {
          textedit(item->name);
 	}
        line("*Description") {
          textarea(3, 30, item->description);
        }
	line("*Price (in US dollars)") {
          textedit(item->price);
        }
	line("*Image File") {
          fileupload(item->imageURL);
        }
	line("Custom tags (separated by spaces)") {
	  // only one tag now....
          select1(item->tags, root->tags); 
        }
        line("") {
          submit("Submit", contact_info(item));
        }
      }
    }
  }
}

def contact_info(item) {
  layout {
      navigate(item->name, show_item(item));
      $item->description
      img("/static/" + item->imageThumbURL, item->name);
      $item->price
      for (t: item->tags) {
        navigate(t->tag, search_by_tag(t)); " "
      }
  }
}

def catalog(cat) {
  layout {
    datatable(cat->products) {
      column("Name") {
        navigate(row->name, show_product(row));
      }
      column("Description") {
        $row->description
      }
      column("Image") {
        img("/static/images/" + row->imageURL, row->name);
      }
    }
  }
}

def show_item(item) {
  layout() {
    img("/static/" + item->imageURL, item->name);
  }
}


def new_product(prod, item) {
  layout {
    form {
      add_to(item, prod->items);
      submit("Submit", show_product(prod));
    }
  }
}


def add_to(item, coll) {
  <input type="hidden" name=address(coll) value=address(item) />
}

def show_product(prod) {
  layout() {
    navigate("New " + prod->name, new_product(prod, new(Item)));
    datatable(prod->items) {
      column("Name") {
        navigate(row->name, show_item(row));
      }
      column("Description") {
        $row->description
      }
      column("Image") {
        img("/static/" + row->imageThumbURL, row->name);
      }
      column("Price") {
        $row->price
      }
      column ("Tags") {
        for (t: row->tags) {
          navigate(t->tag, search_by_tag(t)); " "
        }
      }
    }
  }
}

def category_accordion() {
  accordion() {
    for (x: root->categories) {
      let c = x in {
        pane(c->name) {
          list() {
            for (y: c->products)  {
              let p = y in {
                li() { navigate(p->name, show_product(p)); }
              }
            }
          }
        }
      }
    }
  }
}


def search_by_tag(tag) {
  layout() {
    datatable(tag->items) {
      column("Name") {
        navigate(row->name, show_item(row));
      }
      column("Description") {
        $row->description
      }
      column("Image") {
        img("/static/" + row->imageThumbURL, row->name);
      }
      column("Price") {
        $row->price
      }
    }
  }
}

def petstore_tagcloud() {
  tagcloud("Most popular tags", root->tags) {
    navigate_do(search_by_tag(tag)) {
      span(tag->style, tag->tag);
    }
  }
}



def petstore_menu() {
  menu() {
    for (x: root->categories) {
      let c = x in { // AARGH the closure problem.... all images will be fish without let...
        entry(c->name, catalog(c)) {
          img("/static/images/" + c->imageurl, c->name);
        }
      }
    }
  }
}

def pet_map() {
  image_map("petmap", "Pet Selection Map", "static/images/splash.gif", "350", "355") {
    for (c: root->categories) {
      area(c->name, catalog(c), c->map_coords);
    }
    area("Birds", catalog(root->categories["BIRDS"]), "72,2,280,250");
  }
}


def banner() {
  navigate_img("/static/images/banner_logo.gif", "PetStore", index());
  navigate("Sell", edit_item(new(Item))); menuSep();
  navigate("Search", index()); menuSep();
  navigate("Catalog", index()); menuSep();
  navigate("Map", index()); menuSep();
  navigate("Tags", index()); menuSep();
  navigate("Home", index());
}





//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
// stuff below should be eventually moved to another file



def css() {
        <link type="text/css" rel="stylesheet" href="/static/normalize.css" />
        <link type="text/css" rel="stylesheet" href="/static/tag.css" />
}

def javascript() {
    <script type="text/javascript" src="/static/jquery/js/jquery-1.7.min.js" />
    <script type="text/javascript" src="/static/jquery/js/jquery-ui-1.8.16.custom.min.js" />
    <script type="text/javascript" src="/static/petstore.js"/>
}


def tagcloud(title, tags, yield[tag]) {
  <table border="0">
    <tr><th style="text-align:center;">$title</th></tr>
    for (t: tags) {
      <tr>
      <td class="tagCell" style="text-align: center;">
        yield(t);
      </td>
      </tr>
    }
  </table>
}

def image_map(name, title, src, width, height, areas: area(name, link, coords)) {
  <map name=name>
    for (a: areas) {
     <area onmouseover="javascript:this.style.cursor='pointer';" 
           href=a->link
           alt=a->name
           coords=a->coords />
    }
  </map>
  <img src=src
    alt=title
    usemap="#" + name
    width=width 
    height=height 
    border="0" />
}


def menu(entries: entry(title, page, yield[])) {
  <ul class="menu">
  for (e: entries) {
    <li><a href=e->page title=e->title>e->yield();</a></li>
  }
  </ul>
}

def menuSep() {
  <span class="menuItem"> "|" </span>
}


def enso() {
  // todo: allow o makron
  "Enso"
}

def accordion(panes: pane(title, yield[])) {
  <div class="accordion">
    for (p: panes) {
      <h3><a href="#">$p->title</a></h3>
      <div>
         p->yield();
      </div>
    }
  </div>  
}

def list(elts: li(yield[])) {
  <ul>
    for (e: elts)
      <li>e->yield();</li>
  </ul>
}

def layout(yield[]) {
 <html>
    <head>
        <title>enso(); " Pet Store Reference Application"</title>
        css();
    </head>
    <body>
    <div id="container" style="width: 80%; margin: 0 auto; min-width:40em;">
      <div id="header">
        banner();
      </div>
      <div id="menu" style="float: left; width: 20%;">
        category_accordion();
      </div>
      <div id="main" style="float: left; width: 70%;">
        yield();
      </div>
      <div id="sidebar" style="float: left; width: 10%;">
        petstore_tagcloud();
      </div>
      <div style="clear: both;"> </div>
      <div id="footer">
        "Footer"
      </div>
    </div>
    javascript();
    </body>
 </html>
}

def radio_group(radios: radio(value, label[])) {
  let
    x = gensym 
  in {
    for (r: radios, i) {
      let
        id = gensym
      in {
        <label \for=id>r->label();</label>
        if (i == 0) {
          <input type="radio" id=id name=x value=value selected="true"/>
        }
        else {
          <input type="radio" id=id name=x value=value/>
        }
      }
    }
  }
}
